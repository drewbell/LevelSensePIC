Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

--edf=/Applications/microchip/xc8/v1.45/dat/en_msgs.txt -cs \
  -h+dist/Managed_Stack/production/REF_SW.production.sym \
  --cmf=dist/Managed_Stack/production/REF_SW.production.cmf -z -Q16F690 \
  -o/tmp/xcedZpzm0 -Mdist/Managed_Stack/production/REF_SW.production.map \
  -E1 -ver=XC8 -ASTACK=0120h-016fh -pstack=STACK -ACODE=00h-07FFhx2 \
  -ASTRCODE=00h-0FFFh -ASTRING=00h-0FFhx16 -ACONST=00h-0FFhx16 \
  -AENTRY=00h-0FFhx16 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0120h-016Fh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k /tmp/xchtOdYCz.obj \
  dist/Managed_Stack/production/REF_SW.production.obj 

Object code version is 3.11

Machine type is 16F690



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xchtOdYCz.obj
                end_init                             11       11        2        8       0
                reset_vec                             0        0        2        0       0
                config                             2007     2007        1     400E       0
dist/Managed_Stack/production/REF_SW.production.obj
                cinit                                13       13       1A        8       0
                functab                              2D       2D       12       5A       0
                intentry                              4        4        D        8       0
                text26                              5A4      5A4        2      8CE       0
                text25                              59E      59E        4      8CE       0
                text24                               B2       B2       6A       7E       0
                text23                              566      566        F      8CE       0
                text22                              11C      11C       69       7E       0
                text21                              409      409       30       7E       0
                text20                              526      526       17      8CE       0
                text19                              4B8      4B8       1E      8CE       0
                text18                              553      553       13      8CE       0
                text17                              306      306       54       7E       0
                text16                              467      467       29      8CE       0
                text15                              4F1      4F1       1B      8CE       0
                text14                              39C      39C       38       7E       0
                text13                              2AE      2AE       58       7E       0
                text12                              53D      53D       16      8CE       0
                text11                              4D6      4D6       1B      8CE       0
                text10                              24B      24B       63       7E       0
                text9                               35A      35A       42       7E       0
                text8                               575      575        C      8CE       0
                text7                               1E8      1E8       63       7E       0
                text6                               581      581        B      8CE       0
                text5                               58C      58C        A      8CE       0
                text4                               490      490       28      8CE       0
                text3                               185      185       63       7E       0
                text2                                3F       3F       73       7E       0
                text1                               50C      50C       1A      8CE       0
                jmp_tab__ES_Run                       2        2        2        4       0
                maintext                            3D4      3D4       35       7E       0
                cstackBANK0                          50       50       1F       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             596      596        8      8CE       0
                bssBANK1                             A0       A0       28       A0       1
                bssBANK0                             20       20       30       20       1
                dataCOMMON                           7C       7C        2       70       1
                bssCOMMON                            79       79        3       70       1
                strings                             439      439       2E      872       0
                idataCOMMON                         5A2      5A2        2      8CE       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             11       11        2         0
                cinit                                13       13       1A         0
                intentry                              4        4        D         0
                reset_vec                             0        0        2         0
                text26                              5A4      5A4        2         0
                text25                              59E      59E        4         0
                text24                               B2       B2       6A         0
                text23                              566      566        F         0
                text22                              11C      11C       69         0
                text21                              409      409       30         0
                text20                              526      526       17         0
                text19                              4B8      4B8       1E         0
                text18                              553      553       13         0
                text17                              306      306       54         0
                text16                              467      467       29         0
                text15                              4F1      4F1       1B         0
                text14                              39C      39C       38         0
                text13                              2AE      2AE       58         0
                text12                              53D      53D       16         0
                text11                              4D6      4D6       1B         0
                text10                              24B      24B       63         0
                text9                               35A      35A       42         0
                text8                               575      575        C         0
                text7                               1E8      1E8       63         0
                text6                               581      581        B         0
                text5                               58C      58C        A         0
                text4                               490      490       28         0
                text3                               185      185       63         0
                text2                                3F       3F       73         0
                text1                               50C      50C       1A         0
                maintext                            3D4      3D4       35         0
                clrtext                             596      596        8         0
                idataCOMMON                         5A2      5A2        2         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             439      439       2E         0

        CLASS   CONST          

        CLASS   ENTRY          
                functab                              2D       2D       12         0
                jmp_tab__ES_Run                       2        2        2         0

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                dataCOMMON                           7C       7C        2         1
                bssCOMMON                            79       79        3         1

        CLASS   BANK0          
                cstackBANK0                          50       50       1F         1
                bssBANK0                             20       20       30         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       28         1

        CLASS   BANK2          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK3          



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000002  000002         0       0  CODE        2
                jmp_tab__ES_Run                000002  000002  000004         4       0  ENTRY       2
                intentry                       000004  000029  00002D         8       0  CODE        2
                bssBANK0                       000020  00004F  00006F        20       1  BANK0       1
                functab                        00002D  000012  00003F        5A       0  ENTRY       2
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text2                          00003F  0003FA  000439        7E       0  CODE        2
                bssBANK1                       0000A0  000028  0000C8        A0       1  BANK1       1
                strings                        000439  00002E  000467       872       0  STRING      2
                text16                         000467  00013F  0005A6       8CE       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            006F-006F              1           1
        BANK1            00C8-00EF             28           1
        BANK2            0120-016F             50           1
        CODE             05A6-0FFF            25A           2
        CONST            05A6-0FFF            100           2
        EEDATA           2100-21FF            100           2
        ENTRY            05A6-0FFF            100           2
        IDLOC            2000-2003              4           2
        RAM              006F-006F              1           1
                         00C8-00EF             28
                         0120-016F             50
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-011F             20           1
        SFR3             0180-01EF             70           1
        STACK            0120-016F             50           1
        STRCODE          05A6-0FFF            A5A           2
        STRING           05A6-0FFF            100           2

                                  Symbol Table

?_ES_Run                            cstackBANK0     0068
?_RunSPIService                     cstackBANK0     0050
?_RunUARTRXService                  cstackBANK0     0054
CheckSSEvent@lastSS                 bssBANK0        0027
CheckSSEvent@returnVal              cstackBANK0     0051
CheckSSEvent@thisSS                 cstackBANK0     0052
CheckUARTRXEvent@CommEvent          cstackBANK0     0063
ClearReceivedDataArray@i            cstackCOMMON    0071
ES_DeQueue@NumLeft                  cstackBANK0     005B
ES_DeQueue@pBlock                   cstackBANK0     005C
ES_DeQueue@pReturnEvent             cstackBANK0     0054
ES_DeQueue@pThisQueue               cstackBANK0     005D
ES_DeQueue@saveCrit                 cstackBANK0     005A
ES_EnQueueFIFO@Event2Add            cstackBANK0     0054
ES_EnQueueFIFO@InsertionPoint       cstackBANK0     005A
ES_EnQueueFIFO@pBlock               cstackBANK0     005B
ES_EnQueueFIFO@pThisQueue           cstackBANK0     005C
ES_EnQueueFIFO@saveCrit             cstackBANK0     0059
ES_GetMSBitSet@LoopCntr             cstackBANK0     0056
ES_GetMSBitSet@Nybble2Test          cstackBANK0     0055
ES_GetMSBitSet@ReturnVal            cstackBANK0     0054
ES_GetMSBitSet@Val2Check            cstackBANK0     0053
ES_InitQueue@BlockSize              cstackBANK0     0050
ES_InitQueue@pBlock                 cstackBANK0     0052
ES_InitQueue@pThisQueue             cstackBANK0     0053
ES_Initialize@i                     cstackBANK0     0069
ES_PostToService@TheEvent           cstackBANK0     005D
ES_PostToService@WhichService       cstackBANK0     0061
ES_Run@HighestPrior                 cstackBANK0     006C
ES_Run@ThisEvent                    bssBANK0        004D
ES_Timer_InitTimer@NewTime          cstackBANK0     0050
ES_Timer_InitTimer@Num              cstackBANK0     0053
ES_Timer_RTI_Resp@NeedsProcessing   bssBANK0        0036
ES_Timer_RTI_Resp@NewEvent          bssBANK0        0020
ES_Timer_RTI_Resp@NextTimer2Process bssBANK0        0035
InitSPIService@Priority             cstackBANK0     0062
InitSPIService@ThisEvent            cstackBANK0     0064
InitUARTRXService@Priority          cstackBANK0     0062
InitUARTRXService@ThisEvent         cstackBANK0     0064
PostUARTRXService@ThisEvent         cstackBANK0     0062
RunSPIService@ReturnEvent           cstackBANK0     0053
RunSPIService@ThisEvent             cstackBANK0     0050
RunUARTRXService@FieldAddressLSB    cstackBANK0     005F
RunUARTRXService@FieldAddressMSB    cstackBANK0     005E
RunUARTRXService@ReturnEvent        cstackBANK0     005B
RunUARTRXService@ThisEvent          cstackBANK0     0054
RunUARTRXService@i                  cstackBANK0     0060
SPIIntResponse@readByte             cstackCOMMON    0071
SPI_SM@MyPriority                   bssBANK0        002C
SPI_SM@currentState                 bssBANK0        002B
UARTRXIntResponse@bodyByteCount     bssCOMMON       007A
UARTRXIntResponse@currentByteIndex  bssCOMMON       007B
UARTRXIntResponse@newByte           cstackCOMMON    0073
_ANS11                              (abs)           08FB
_ANS4                               (abs)           08F4
_ANS7                               (abs)           08F7
_ANSELH                             (abs)           011F
_BF                                 (abs)           04A0
_BRG16                              (abs)           04DB
_BRGH                               (abs)           04C2
_BitNum2SetMask                     strings         0456
_CREN                               (abs)           00C4
_CheckSSEvent                       text12          053D
_CheckUARTRXEvent                   text11          04D6
_ClearReceivedDataArray             text23          0566
_ES_DeQueue                         text10          024B
_ES_EnQueueFIFO                     text17          0306
_ES_GetMSBitSet                     text9           035A
_ES_InitQueue                       text20          0526
_ES_Initialize                      text13          02AE
_ES_PostToService                   text16          0467
_ES_Run                             text2           003F
_ES_Sys_Timer_Init                  text19          04B8
_ES_Timer_InitTimer                 text4           0490
_ES_Timer_RTI_Resp                  text7           01E8
_EventQueues                        strings         045E
_FieldAddr                          bssBANK0        0023
_GIE                                (abs)           005F
_INTCON                             (abs)           000B
_ISR                                text21          0409
_InitSPIService                     text14          039C
_InitUARTRXService                  text15          04F1
_IsTimerPending                     text6           0581
_MyPriority                         bssBANK0        0034
_Nybble2MSBitNum                    strings         043F
_OSCCON                             (abs)           008F
_PEIE                               (abs)           005E
_PORTC                              (abs)           0007
_PS0                                (abs)           0408
_PS1                                (abs)           0409
_PS2                                (abs)           040A
_PSA                                (abs)           040B
_PostUARTRXService                  text8           0575
_Queue0                             bssBANK1        00BC
_Queue1                             bssBANK1        00B0
_RC0                                (abs)           0038
_RC3                                (abs)           003B
_RC4                                (abs)           003C
_RC5                                (abs)           003D
_RC6                                (abs)           003E
_RCIE                               (abs)           0465
_RCIF                               (abs)           0065
_RCREG                              (abs)           001A
_RXFlag                             bssBANK0        002E
_RX_getStatusBuffer                 text26          05A4
_RX_newStatusReady                  text25          059E
_Ready                              bssBANK0        0039
_ReceivedData                       bssBANK0        0044
_RunSPIService                      text5           058C
_RunUARTRXService                   text3           0185
_SPBRG                              (abs)           0099
_SPBRGH                             (abs)           009A
_SPEN                               (abs)           00C7
_SPIBuffer                          bssBANK0        002A
_SPIIntResponse                     text24          00B2
_SSPBUF                             (abs)           0013
_SSPCON                             (abs)           0014
_SSPIE                              (abs)           0463
_SSPIF                              (abs)           0063
_SSPSTAT                            (abs)           0094
_SYNC                               (abs)           04C4
_ServDescList                       strings         0462
_StatusArray                        bssBANK0        003B
_StatusResponseStore                bssCOMMON       0079
_T0CS                               (abs)           040D
_T0IE                               (abs)           005D
_T0IF                               (abs)           005A
_TMR0                               (abs)           0001
_TMR_ActiveFlags                    bssBANK0        0037
_TMR_TimerArray                     bssBANK1        00A0
_TRISB4                             (abs)           0434
_TRISB6                             (abs)           0436
_TRISC0                             (abs)           0438
_TRISC3                             (abs)           043B
_TRISC4                             (abs)           043C
_TRISC5                             (abs)           043D
_TRISC6                             (abs)           043E
_TRISC7                             (abs)           043F
_TXEN                               (abs)           04C5
_TXIE                               (abs)           0464
_TXIF                               (abs)           0064
_TXREG                              (abs)           0019
_TickCount                          bssBANK0        0038
_Timer2PostFunc                     strings         044E
_UARTRXIntResponse                  text22          011C
_USART_Init                         text1           050C
__CFG_BOREN$OFF                     (abs)           0000
__CFG_CP$OFF                        (abs)           0000
__CFG_CPD$OFF                       (abs)           0000
__CFG_FCMEN$OFF                     (abs)           0000
__CFG_FOSC$HS                       (abs)           0000
__CFG_IESO$OFF                      (abs)           0000
__CFG_MCLRE$ON                      (abs)           0000
__CFG_PWRTE$ON                      (abs)           0000
__CFG_WDTE$OFF                      (abs)           0000
__Habs1                             abs1            0000
__Hbank0                            bank0           0000
__Hbank1                            bank1           0000
__Hbank2                            bank2           0000
__Hbank3                            bank3           0000
__HbssBANK0                         bssBANK0        0000
__HbssBANK1                         bssBANK1        0000
__HbssCOMMON                        bssCOMMON       0000
__Hcinit                            cinit           002D
__Hclrtext                          clrtext         0000
__Hcode                             code            0000
__Hcommon                           common          0000
__Hconfig                           config          2008
__HcstackBANK0                      cstackBANK0     0000
__HcstackCOMMON                     cstackCOMMON    0000
__HdataCOMMON                       dataCOMMON      0000
__Heeprom_data                      eeprom_data     0000
__Hend_init                         end_init        0013
__Hfunctab                          functab         003F
__HidataCOMMON                      idataCOMMON     0000
__Hidloc                            idloc           0000
__Hinit                             init            0011
__Hintentry                         intentry        0011
__Hjmp_tab__ES_Run                  jmp_tab__ES_Run 0000
__Hmaintext                         maintext        0000
__Hpowerup                          powerup         0000
__Hram                              ram             0000
__Hreset_vec                        reset_vec       0002
__Hsfr0                             sfr0            0000
__Hsfr1                             sfr1            0000
__Hsfr2                             sfr2            0000
__Hsfr3                             sfr3            0000
__Hspace_0                          (abs)           2008
__Hspace_1                          (abs)           00C8
__Hspace_2                          (abs)           0000
__Hspace_3                          (abs)           0000
__Hstack                            stack           0000
__Hstrings                          strings         0000
__Htext                             text            0000
__Labs1                             abs1            0000
__Lbank0                            bank0           0000
__Lbank1                            bank1           0000
__Lbank2                            bank2           0000
__Lbank3                            bank3           0000
__LbssBANK0                         bssBANK0        0000
__LbssBANK1                         bssBANK1        0000
__LbssCOMMON                        bssCOMMON       0000
__Lcinit                            cinit           0013
__Lclrtext                          clrtext         0000
__Lcode                             code            0000
__Lcommon                           common          0000
__Lconfig                           config          2007
__LcstackBANK0                      cstackBANK0     0000
__LcstackCOMMON                     cstackCOMMON    0000
__LdataCOMMON                       dataCOMMON      0000
__Leeprom_data                      eeprom_data     0000
__Lend_init                         end_init        0011
__Lfunctab                          functab         002D
__LidataCOMMON                      idataCOMMON     0000
__Lidloc                            idloc           0000
__Linit                             init            0011
__Lintentry                         intentry        0004
__Ljmp_tab__ES_Run                  jmp_tab__ES_Run 0000
__Lmaintext                         maintext        0000
__Lpowerup                          powerup         0000
__Lram                              ram             0000
__Lreset_vec                        reset_vec       0000
__Lsfr0                             sfr0            0000
__Lsfr1                             sfr1            0000
__Lsfr2                             sfr2            0000
__Lsfr3                             sfr3            0000
__Lspace_0                          (abs)           0000
__Lspace_1                          (abs)           0000
__Lspace_2                          (abs)           0000
__Lspace_3                          (abs)           0000
__Lstack                            stack           0000
__Lstrings                          strings         0000
__Ltext                             text            0000
__S0                                (abs)           2008
__S1                                (abs)           00C8
__S2                                (abs)           0000
__S3                                (abs)           0000
___bmul                             text18          0553
___bmul@multiplicand                cstackBANK0     0050
___bmul@multiplier                  cstackBANK0     0053
___bmul@product                     cstackBANK0     0052
___int_sp                           stack           0000
___latbits                          (abs)           0001
___sp                               stack           0000
__end_of_BitNum2SetMask             strings         045E
__end_of_CheckSSEvent               text12          0553
__end_of_CheckUARTRXEvent           text11          04F1
__end_of_ClearReceivedDataArray     text23          0575
__end_of_ES_DeQueue                 text10          02AE
__end_of_ES_EnQueueFIFO             text17          035A
__end_of_ES_EventList               strings         0467
__end_of_ES_GetMSBitSet             text9           039C
__end_of_ES_InitQueue               text20          053D
__end_of_ES_Initialize              text13          0306
__end_of_ES_PostToService           text16          0490
__end_of_ES_Run                     text2           00B2
__end_of_ES_Sys_Timer_Init          text19          04D6
__end_of_ES_Timer_InitTimer         text4           04B8
__end_of_ES_Timer_RTI_Resp          text7           024B
__end_of_EventQueues                strings         0462
__end_of_ISR                        text21          0439
__end_of_InitSPIService             text14          03D4
__end_of_InitUARTRXService          text15          050C
__end_of_IsTimerPending             text6           058C
__end_of_Nybble2MSBitNum            strings         044E
__end_of_PostUARTRXService          text8           0581
__end_of_RX_getStatusBuffer         text26          05A6
__end_of_RX_newStatusReady          text25          05A2
__end_of_RunSPIService              text5           0596
__end_of_RunUARTRXService           text3           01E8
__end_of_SPIIntResponse             text24          011C
__end_of_ServDescList               strings         0466
__end_of_Timer2PostFunc             strings         0456
__end_of_UARTRXIntResponse          text22          0185
__end_of_USART_Init                 text1           0526
__end_of___bmul                     text18          0566
__end_of__fptable                   functab         003F
__end_of__initialization            cinit           002A
__end_of__stringtab                 strings         043F
__end_of_main                       maintext        0409
__fptable                           functab         002D
__initialization                    cinit           0013
__pbssBANK0                         bssBANK0        0020
__pbssBANK1                         bssBANK1        00A0
__pbssCOMMON                        bssCOMMON       0079
__pcstackBANK0                      cstackBANK0     0050
__pcstackCOMMON                     cstackCOMMON    0070
__pdataCOMMON                       dataCOMMON      007C
__pfunctab                          functab         002D
__pidataCOMMON                      idataCOMMON     05A2
__pintentry                         intentry        0004
__pjmp_tab__ES_Run                  jmp_tab__ES_Run 0002
__pmaintext                         maintext        03D4
__pstrings                          strings         0439
__ptext1                            text1           050C
__ptext10                           text10          024B
__ptext11                           text11          04D6
__ptext12                           text12          053D
__ptext13                           text13          02AE
__ptext14                           text14          039C
__ptext15                           text15          04F1
__ptext16                           text16          0467
__ptext17                           text17          0306
__ptext18                           text18          0553
__ptext19                           text19          04B8
__ptext2                            text2           003F
__ptext20                           text20          0526
__ptext21                           text21          0409
__ptext22                           text22          011C
__ptext23                           text23          0566
__ptext24                           text24          00B2
__ptext25                           text25          059E
__ptext26                           text26          05A4
__ptext3                            text3           0185
__ptext4                            text4           0490
__ptext5                            text5           058C
__ptext6                            text6           0581
__ptext7                            text7           01E8
__ptext8                            text8           0575
__ptext9                            text9           035A
__size_of_CheckSSEvent              (abs)           0000
__size_of_CheckUARTRXEvent          (abs)           0000
__size_of_ClearReceivedDataArray    (abs)           0000
__size_of_ES_DeQueue                (abs)           0000
__size_of_ES_EnQueueFIFO            (abs)           0000
__size_of_ES_GetMSBitSet            (abs)           0000
__size_of_ES_InitQueue              (abs)           0000
__size_of_ES_Initialize             (abs)           0000
__size_of_ES_PostToService          (abs)           0000
__size_of_ES_Run                    (abs)           0000
__size_of_ES_Sys_Timer_Init         (abs)           0000
__size_of_ES_Timer_InitTimer        (abs)           0000
__size_of_ES_Timer_RTI_Resp         (abs)           0000
__size_of_ISR                       (abs)           0000
__size_of_InitSPIService            (abs)           0000
__size_of_InitUARTRXService         (abs)           0000
__size_of_IsTimerPending            (abs)           0000
__size_of_PostUARTRXService         (abs)           0000
__size_of_RX_getStatusBuffer        (abs)           0000
__size_of_RX_newStatusReady         (abs)           0000
__size_of_RunSPIService             (abs)           0000
__size_of_RunUARTRXService          (abs)           0000
__size_of_SPIIntResponse            (abs)           0000
__size_of_UARTRXIntResponse         (abs)           0000
__size_of_USART_Init                (abs)           0000
__size_of___bmul                    (abs)           0000
__size_of__fptable                  (abs)           0000
__size_of_main                      (abs)           0000
__stringbase                        strings         043E
__stringtab                         strings         0439
_checksum                           bssBANK0        003A
_commOpen                           bssBANK0        0029
_currentState                       bssBANK0        0033
_flag2                              bssBANK0        0030
_flag3                              bssBANK0        002F
_hasHeartbeat                       bssBANK0        002D
_main                               maintext        03D4
_newRequest                         bssBANK0        0028
_newResponseAvailable               bssBANK0        0031
_newStatusAvailable                 bssBANK0        0032
_responseBytes                      dataCOMMON      007C
_time                               bssBANK0        0025
btemp                               (abs)           007E
clear_ram0                          clrtext         0596
end_of_initialization               cinit           002A
entry__CheckUARTRXEvent             functab         0037
entry__RunSPIService                functab         003B
entry__RunUARTRXService             functab         003D
fpbase                              functab         0032
fptable                             functab         002D
fptotal                             (abs)           000C
interrupt_function                  intentry        0004
intlevel0                           functab         002D
intlevel1                           functab         002D
intlevel2                           functab         002D
intlevel3                           functab         002D
intlevel4                           functab         002D
intlevel5                           functab         002D
main@ErrorType                      cstackBANK0     006E
reset_vec                           reset_vec       0000
saved_w                             (abs)           007E
stackhi                             (abs)           0000
stacklo                             (abs)           0000
start                               init            0011
start_initialization                cinit           0013
u1497jf                             maintext        03FA
wtemp0                              (abs)           007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 21 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  ErrorType       1   30[BANK0 ] enum E1642
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_ES_Initialize
		_ES_Run
		_USART_Init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _USART_Init *****************
 Defined at:
		line 11 in file "sci.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ES_Run *****************
 Defined at:
		line 224 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  HighestPrior    1   28[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1   24[BANK0 ] enum E1595
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_CheckSSEvent
		_CheckUARTRXEvent
		_ES_DeQueue
		_ES_GetMSBitSet
		_ES_Timer_RTI_Resp
		_IsTimerPending
		_RunSPIService
		_RunUARTRXService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _RunUARTRXService *****************
 Defined at:
		line 131 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    4[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  i               1   16[BANK0 ] unsigned char 
  FieldAddress    1   15[BANK0 ] unsigned char 
  FieldAddress    1   14[BANK0 ] unsigned char 
  ReturnEvent     3   11[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3    4[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       6       0       0
      Temps:          0       4       0       0
      Totals:         0      13       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ES_Timer_InitTimer
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_InitTimer *****************
 Defined at:
		line 205 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
  Num             1    wreg     unsigned char 
  NewTime         2    0[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  Num             1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E1482
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_RunUARTRXService
 This function uses a non-reentrant model


 *************** function _RunSPIService *****************
 Defined at:
		line 162 in file "SPI_SM.c"
 Parameters:    Size  Location     Type
  ThisEvent       3    0[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  ReturnEvent     3    3[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  3    0[BANK0 ] struct ES_Event_t
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _IsTimerPending *****************
 Defined at:
		line 78 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Timer_RTI_Resp *****************
 Defined at:
		line 259 in file "ES_Timers.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       3       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		Absolute function
		_ES_GetMSBitSet
		_PostUARTRXService
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _PostUARTRXService *****************
 Defined at:
		line 110 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
  ThisEvent       3   18[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Timer_RTI_Resp
 This function uses a non-reentrant model


 *************** function _ES_GetMSBitSet *****************
 Defined at:
		line 78 in file "ES_LookupTables.c"
 Parameters:    Size  Location     Type
  Val2Check       1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  Val2Check       1    3[BANK0 ] unsigned char 
  LoopCntr        1    6[BANK0 ] char 
  Nybble2Test     1    5[BANK0 ] unsigned char 
  ReturnVal       1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       4       0       0
      Temps:          0       3       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
		_ES_Timer_RTI_Resp
 This function uses a non-reentrant model


 *************** function _ES_DeQueue *****************
 Defined at:
		line 125 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          1    wreg     PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pReturnEvent    1    4[BANK0 ] PTR struct ES_Event_t
		 -> ES_Run@ThisEvent(3), 
 Auto vars:     Size  Location     Type
  pBlock          1   12[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pThisQueue      1   13[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  NumLeft         1   11[BANK0 ] unsigned char 
  saveCrit        1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       4       0       0
      Temps:          0       5       0       0
      Totals:         0      10       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___bmul
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _CheckUARTRXEvent *****************
 Defined at:
		line 396 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  CommEvent       3   19[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Run
		_ES_CheckUserEvents
 This function uses a non-reentrant model


 *************** function _CheckSSEvent *****************
 Defined at:
		line 290 in file "SPI_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  thisSS          1    2[BANK0 ] unsigned char 
  returnVal       1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Run
 This function uses a non-reentrant model


 *************** function _ES_Initialize *****************
 Defined at:
		line 189 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  NewRate         1    wreg     enum E93
 Auto vars:     Size  Location     Type
  NewRate         1    0[COMMON] enum E93
  i               1   25[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      enum E1595
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       2       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_ES_InitQueue
		_ES_Sys_Timer_Init
		_InitSPIService
		_InitUARTRXService
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _InitSPIService *****************
 Defined at:
		line 78 in file "SPI_SM.c"
 Parameters:    Size  Location     Type
  Priority        1   18[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  ThisEvent       3   20[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _InitUARTRXService *****************
 Defined at:
		line 79 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
  Priority        1   18[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  ThisEvent       3   20[BANK0 ] struct ES_Event_t
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_ES_PostToService
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_PostToService *****************
 Defined at:
		line 313 in file "ES_Framework.c"
 Parameters:    Size  Location     Type
  WhichService    1    wreg     unsigned char 
  TheEvent        3   13[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  WhichService    1   17[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       1       0       0
      Temps:          0       1       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_ES_EnQueueFIFO
 This function is called by:
		_InitUARTRXService
		_PostUARTRXService
		_CheckUARTRXEvent
		_InitSPIService
		_PostSPIService
 This function uses a non-reentrant model


 *************** function _ES_EnQueueFIFO *****************
 Defined at:
		line 83 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          1    wreg     PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  Event2Add       3    4[BANK0 ] struct ES_Event_t
 Auto vars:     Size  Location     Type
  pBlock          1   11[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pThisQueue      1   12[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
  InsertionPoi    1   10[BANK0 ] unsigned char 
  saveCrit        1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       3       0       0
      Locals:         0       4       0       0
      Temps:          0       2       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___bmul
 This function is called by:
		_ES_PostToService
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "/Applications/microchip/xc8/v1.45/sources/common/Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    3[BANK0 ] unsigned char 
  product         1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
		_ES_Run
		_ES_PostToService
		_ES_EnQueueFIFO
		_ES_DeQueue
		_ES_PostAll
 This function uses a non-reentrant model


 *************** function _ES_Sys_Timer_Init *****************
 Defined at:
		line 25 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ES_InitQueue *****************
 Defined at:
		line 56 in file "ES_Queue.c"
 Parameters:    Size  Location     Type
  pBlock          1    wreg     PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  BlockSize       1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  pBlock          1    2[BANK0 ] PTR struct ES_Event_t
		 -> Queue1(12), Queue0(12), 
  pThisQueue      1    3[BANK0 ] PTR struct .
		 -> Queue1(12), Queue0(12), 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ES_Initialize
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 53 in file "ES_Port.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          5       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_SPIIntResponse
		_UARTRXIntResponse
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _UARTRXIntResponse *****************
 Defined at:
		line 310 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  newByte         1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_ClearReceivedDataArray
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _ClearReceivedDataArray *****************
 Defined at:
		line 427 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  i               1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_UARTRXIntResponse
 This function uses a non-reentrant model


 *************** function _SPIIntResponse *****************
 Defined at:
		line 183 in file "SPI_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  readByte        1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          1       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_RX_getStatusBuffer
		_RX_newStatusReady
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _RX_newStatusReady *****************
 Defined at:
		line 208 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPIIntResponse
 This function uses a non-reentrant model


 *************** function _RX_getStatusBuffer *****************
 Defined at:
		line 225 in file "UART_RX_SM.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      PTR volatile unsigned ch
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_SPIIntResponse
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
ES_Queue.c
		_ES_EnQueueFIFO		CODE           	0306	0000	85
		_ES_DeQueue    		CODE           	024B	0000	100
		_ES_InitQueue  		CODE           	0526	0000	24

ES_Queue.c estimated size: 209

ES_LookupTables.c
		_ES_GetMSBitSet		CODE           	035A	0000	67

ES_LookupTables.c estimated size: 67

ES_Framework.c
		_ES_PostToService		CODE           	0467	0000	42
		_ES_Run        		CODE           	003F	0000	116
		_ES_Initialize 		CODE           	02AE	0000	89

ES_Framework.c estimated size: 247

UART_RX_SM.c
		_UARTRXIntResponse		CODE           	011C	0000	106
		_RX_newStatusReady		CODE           	059E	0000	5
		_InitUARTRXService		CODE           	04F1	0000	28
		_CheckUARTRXEvent		CODE           	04D6	0000	28
		_ClearReceivedDataArray		CODE           	0566	0000	16
		_RunUARTRXService		CODE           	0185	0000	100
		_RX_getStatusBuffer		CODE           	05A4	0000	3
		_PostUARTRXService		CODE           	0575	0000	13

UART_RX_SM.c estimated size: 299

/Applications/microchip/xc8/v1.45/sources/common/Umul8.c
		___bmul        		CODE           	0553	0000	20

/Applications/microchip/xc8/v1.45/sources/common/Umul8.c estimated size: 20

shared
		_BitNum2SetMask		STRING         	0456	0000	9
		__stringtab    		STRING         	0439	0000	7
		_ES_EventList  		STRING         	0000	0000	0
		_Nybble2MSBitNum		STRING         	043F	0000	16
		_EventQueues   		STRING         	045E	0000	5
		__initialization		CODE           	0013	0000	24
		_Timer2PostFunc		STRING         	044E	0000	9
		__fptable      		ENTRY          	002D	0000	19
		_ServDescList  		STRING         	0462	0000	5

shared estimated size: 94

SPI_SM.c
		_CheckSSEvent  		CODE           	053D	0000	23
		_RunSPIService 		CODE           	058C	0000	11
		_SPIIntResponse		CODE           	00B2	0000	107
		_InitSPIService		CODE           	039C	0000	57

SPI_SM.c estimated size: 198

ES_Port.c
		_ISR           		CODE           	0409	0000	49
		_IsTimerPending		CODE           	0581	0000	12
		_ES_Sys_Timer_Init		CODE           	04B8	0000	31

ES_Port.c estimated size: 92

ES_Timers.c
		_ES_Timer_RTI_Resp		CODE           	01E8	0000	100
		_ES_Timer_InitTimer		CODE           	0490	0000	41

ES_Timers.c estimated size: 141

main.c
		_main          		CODE           	03D4	0000	54

main.c estimated size: 54

sci.c
		_USART_Init    		CODE           	050C	0000	27

sci.c estimated size: 27

